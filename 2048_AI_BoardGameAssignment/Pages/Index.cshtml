@page
@model IndexModel
@using Microsoft.AspNetCore.Mvc.RazorPages
@functions {
    //public class IndexModel : PageModel
    //{
    //    public int[,] board = new int[4, 4] { { 0, 0, 0, 0 }, { 0, 0, 0, 0 }, { 0, 0, 0, 0 }, { 0, 0, 0, 0 } };
    //    public string MoveTiles(string direction)
    //    {
    //        System.Diagnostics.Debug.WriteLine(direction);
    //        switch (direction)
    //        {
    //            case "left":
    //                for (int y = 0; y <= 3; y++)
    //                    for (int x = 1; x <= 3; x++)
    //                        for (int i = x; i > 0; i--)
    //                            if (board[x - i, y] == 0)
    //                            {
    //                                board[x - i, y] = board[x, y];
    //                                board[x, y] = 0;
    //                                break;
    //                            };
    //                UpdateBoard();
    //                break;
    //            case "right":
    //                AddNumber();
    //                break;
    //            case "up":
    //                AddNumber();
    //                break;
    //            case "down":
    //                break;
    //        }
    //        return direction;
    //    }

    //    public void OnGet()
    //    {
    //        UpdateBoard();
    //    }

    //    public void OnPost()
    //    {
    //        var direction = Request.Form["direction"].ToString();
    //        MoveTiles(direction);
    //    }

    //    public struct Square
    //    {
    //        public int x { get; set; }
    //        public int y { get; set; }

    //        public Square(int X, int Y)
    //        {
    //            x = X;
    //            y = Y;
    //        }
    //    }

    //    public void AddNumber()
    //    {
    //        var possibleSquares = new List<Square>();
    //        for (int x = 0; x <= 3; x++)
    //        {
    //            for (int y = 0; y <= 3; y++)
    //                if (board[x, y] == 0)
    //                {
    //                    possibleSquares.Add(new Square(x, y));
    //                };
    //        };
    //        var squaresToAdd = possibleSquares.Count;
    //        if (squaresToAdd > 0)
    //        {
    //            Random rnd = new Random();
    //            int squareToFill = rnd.Next(0, squaresToAdd);
    //            board[possibleSquares[squareToFill].x, possibleSquares[squareToFill].y] = rnd.NextDouble() < 0.9 ? 2 : 4;
    //        }
    //    }

    //    public void UpdateBoard()
    //    {
    //        AddNumber();
    //        //ViewData["1"] = board[0, 0];
    //        //ViewData["2"] = board[0, 1];
    //        //ViewData["3"] = board[0, 2];
    //        //ViewData["4"] = board[0, 3];
    //        //ViewData["5"] = board[1, 0];
    //        //ViewData["6"] = board[1, 1];
    //        //ViewData["7"] = board[1, 2];
    //        //ViewData["8"] = board[1, 3];
    //        //ViewData["9"] = board[2, 0];
    //        //ViewData["10"] = board[2, 1];
    //        //ViewData["11"] = board[2, 2];
    //        //ViewData["12"] = board[2, 3];
    //        //ViewData["13"] = board[3, 0];
    //        //ViewData["14"] = board[3, 1];
    //        //ViewData["15"] = board[3, 2];
    //        //ViewData["16"] = board[3, 3];
    //    }
    //}
}

<script>
    document.addEventListener('keydown', function (event) {
        var x = event.which
        console.log(x);
        if(x == 37) {
            document.getElementById("dir").value = "left";
            document.getElementById("subDir").click();
        }
        else if(x == 38) {
            document.getElementById("dir").value = "up";
            document.getElementById("subDir").click();
        }
        else if (x == 39) {
            document.getElementById("dir").value = "right";
            document.getElementById("subDir").click();
        }
        else if (x == 40) {
            document.getElementById("dir").value = "down";
            document.getElementById("subDir").click();
        }
    }
    );
        //switch (x) {
        //    case 37: {
        //        document.getElementById("direction").value = "left";
        //        document.getElementById("button").click();
        //    }
        //    case 38: {
        //        document.getElementById("direction").value = "up";
        //        document.getElementById("button").click();
        //    }
        //    case 39: {
        //        document.getElementById("direction").value = "right";
        //        document.getElementById("button").click();
        //    }
        //    case 40: {
        //        document.getElementById("direction").value = "down";
        //        document.getElementById("button").click();
        //    }
        //}
        //}

    @*function myFunction(event) {
        var x = event.which || event.keyCode;
        switch (x) {
            case 37: {
                @Model.MoveTiles("left");
            }
            case 38: {
                @Model.MoveTiles("up");
            }
            case 39: {
                @Model.MoveTiles("right");
            }
            case 40: {
                @Model.MoveTiles("down");
            }
            default: {
                @Model.MoveTiles(" ");
            }
        }
    }*@
</script>

<div class="board">
    @*<input id="dir" type="text" name="direction" value="" />
    <input type="submit" id="subDir" onclick=""/>
    <button id="button" type="submit" style="display: none;"></button>
    <div class="row row-1">
        <div class="col tile">@ViewData["1"] </div>
        <div class="col tile">@ViewData["2"] </div>
        <div class="col tile">@ViewData["3"] </div>
        <div class="col tile">@ViewData["4"] </div>
    </div>
    <div class="row row-2">
        <div class="col tile">@ViewData["5"] </div>
        <div class="col tile">@ViewData["6"] </div>
        <div class="col tile">@ViewData["7"] </div>
        <div class="col tile">@ViewData["8"] </div>
    </div>
    <div class="row row-3">
        <div class="col tile">@ViewData["9"] </div>
        <div class="col tile">@ViewData["10"] </div>
        <div class="col tile">@ViewData["11"] </div>
        <div class="col tile">@ViewData["12"] </div>
    </div>
    <div class="row row-4">
        <div class="col tile">@ViewData["13"] </div>
        <div class="col tile">@ViewData["14"] </div>
        <div class="col tile">@ViewData["15"] </div>
        <div class="col tile">@ViewData["16"] </div>
    </div>*@
</div>
